openapi: "3.0.0"
info:
  version: 0.1.0
  title: Patient Information API
  description: |
    ## Overview
    Use this API to access the [Personal Demographics Service (PDS)](https://digital.nhs.uk/services/demographics) - the national electronic database of NHS patient details such as name, address, date of birth and NHS Number.

    You can:
    * search for patients
    * get patients' personal details
    * update patients' personal details

    You cannot currently use this API to:
    * register births (not required for GPs)
    * register new patients (GPs should do this via [NHAIS](https://digital.nhs.uk/services/nhais/nhais-developer-document-library))

    You can currently access the following data:
    * NHS Number
    * name
    * gender
    * birth
    * addresses
    * contact details
    * registered GP
    * preferred pharmacy
    * reasonable adjustments
    * consent information
    * related people

    ## API status
    This API is in Alpha - expect significant breaking changes.

    We are working towards making this API fully compliant with FHIR.

    ## Versioning
    When an API changes in a way that is backwards-incompatible, we increase the version number of the API. More details to follow.

    ## Authorisation
    This API is user-restricted. It uses OAuth 2.0 to authorise both the calling system and end user. More details to follow.

    ## Testing
    You can test this API in:
    * our sandbox environment
    * our integration test environment (coming soon)

    For sandbox test scenarios and test data, refer to the documentation for individual endpoints.

    ## Assurance
    Details to follow.

    ## Endpoints
    To see details for specific endpoints, select from the list on the left hand side of the page:
    * /Patient GET: search for patient
    * /Patient/{nhs_number} GET: get patient's personal details
    * /Patient/{nhs_number> PATCH: update patient's personal details
    * details for other endpoints to follow
  contact:
    name: 'Patient Information API Support'
    url: 'https://tbc.api.nhs.net'
    email: 'tbc-api-support@nhs.net'

servers:
  - url: https://emea-demo8-test.apigee.net/v1
    description: Mock test server

tags:
  - name: patients

paths:
  /Patient:
    get:
      summary: Search for patients
      operationId: search-patients
      externalDocs:
        description: ODS codes and documentation
        url: https://digital.nhs.uk/services/organisation-data-service
      description: |
        ## Search types
        This endpoint will search for a patient using one of four search types. The choice of search is automatic and will cascade as necessary until results are found.

        ### Simple
        The fastest match, requires family_name, first_name, gender, birth_date
        Returns either a single matching patient or nothing. A limited set of parameters can be provided, all of which must exactly match the current information held.

        ### Advanced
        Can return multiple matching patients if the information provided matches the current information held. Supports searching against additional information fields. Wildcards (\*) in name and postcode fields are supported. Wildcards must be preceeded by at least two characters, i.e. 'Br\*' is valid, but '\*cDougal' is not

        ### Advanced Historic
        Identical to advanced except it also searches historic data.

        ### Weighted
        Returns a percentage match weight for each potentially matching patient. Always searches historical data. Requires at least one of the following combinations of search parameters:
          - family_name, first_name, gender, birth_date (or range)
          - family_name, gender, birth_date (or range), postcode
          - first_name, gender, birth_date (or range), postcode
      tags:
        - patients
      parameters:
        - name: family_name
          description: The patient's family name (surname)
          example: Smith
          in: query
          required: false
          schema:
            type: string
        - name: given_name
          description: the patient's first given name
          example: Jane
          in: query
          required: false
          schema:
            type: string
        - name: other_names
          description: Any other given name(s). Ignored if provided in simple searches.
          example: Jenny
          in: query
          required: false
          schema:
            type: string
        - name: gender
          description: Gender with which the patient most strongly identifies.
          example: female
          in: query
          required: false
          schema:
            $ref: 'components/schemas/Gender.yaml'
        - name: birth_date
          in: query
          description: Birth date in the format yyyy-mm-dd. Required for simple searches. Other search types must provide either a birth date or a birth date range
          example: "2018-03-20"
          required: false
          schema:
            type: string
            format: date
        - name: birth_date_range_start
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
        - name: birth_date_range_end
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
        - name: death_date
          in: query
          description: Date of death in the format yyyy-mm-dd
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
            example: 2018-03-20
        - name: death_date_range_start
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
            example: 2018-03-25
        - name: death_date_range_end
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
        - name: postcode
          description: White spaces in postcodes are significant, i.e. LS16AE will not match LS1 6AE
          example: LS1 6AE
          in: query
          required: false
          schema:
            type: string
        - name: practice_code
          description: The ODS code of the patient's registered general practice. Do not use in simple searches
          example: Y00001
          in: query
          required: false
          schema:
            type: string
            format: ods_code
            pattern: '^[A-Z]\d{5}$'
      responses:
        '200':
          description: An array of matched patients. Empty if none found. Returns percentage match weight for each returned patient for weighted searches.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - match_weight
                    - patient
                  properties:
                    match_weight:
                      type: number
                      example: 78.5
                      minimum: 0
                      maximum: 100
                    patient:
                      $ref: 'components/schemas/Patient.yaml'
              example:
                items:
                  - match_weight: 100.0
                    patient:
                      $ref: 'components/examples/Patient.json'
        '400':
          description: Invalid search params supplied.
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Error.yaml'
              examples:
                not-enough:
                  summary: Too few search params
                  value:
                    code: invalid_search_params
                    message: 'Not enough search parameters were provided to be able to make a search'
                bad-dob:
                  summary: Bad date of birth format
                  value:
                    code: invalid_search_params
                    message: 'Date of birth has invalid format: 01-01-1900 is not in YYYY-MM-DD format'

  /Patient/{nhs_number}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: |
        ## Overview
        Returns personal details for the patient with the given NHS Number.

        ## Sandbox test scenarios
        You can test the following scenarios in our sandbox environment:
        <table><tr><th>Scenario</th><th>Request</th><th>Response</th></tr><tr><td>Patient exists</td><td>nhs_number=9111111111</td><td>HTTP Status 200 with patient data in the response body</td></tr><tr><td>Patient doesn't exist</td><td>nhs_number=&lt;any other valid NHS Number&gt;</td><td>HTTP Status 404 with error details in the response body</td></tr><tr><td>Invalid NHS Number</td><td>nhs_number=&lt;any invalid NHS Number&gt;</td><td>HTTP Status 400 with error details in the response body</td></tr></table>

        You can try this out using the "Try it now" feature on the right hand side of this page.

      summary: Retrieve a patient's record
      operationId: get-patient
      tags:
        - patients
      responses:
        '200':
          description: Information successfully returned
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Patient.yaml'
              example:
                $ref: 'components/examples/Patient.json'
        '400':
          description: Bad NHS number supplied
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Error.yaml'
              example:
                code: 'invalid_nhs_number'
                message: 'NHS number is not in the correct format, or is not a real NHS number'
        '404':
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Error.yaml'
              example:
                code: 'not_found'
                message: 'Patient with NHS number 1234567890 could not be found'
    patch:
      description: Updates specific patient information. Updates are specified JSON Patch.
      summary: Update a patient's record
      operationId: update-patient-partial
      tags:
        - patients
      externalDocs:
        description: IETF RFC
        url: https://tools.ietf.org/html/rfc6902
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              type: object
              required:
                - patches
              properties:
                correction:
                  description: Set to true if the update is correcting previously incorrect data
                  type: boolean
                  default: false
                patches:
                  $ref: 'components/schemas/JsonPatch.yaml'
            examples:
              add-name:
                summary: Add a new name to the patient
                value:
                  patches:
                    - op: 'add'
                      path: 'names/-'
                      value:
                        use: preferred
                        business_effective:
                          start: 2019-12-31
                        title: Dr
                        given_name: Joe
                        family_name: Bloggs
                        other_names: Horatio Maximus
                        suffix: PhD
              update-name:
                summary: Update the second given name entry
                value:
                  correction:
                  patches:
                    - op: 'replace'
                      path: 'names/1/given_name'
                      value: 'Jonathan'
              delete-name:
                summary: Remove a name no longer in use
                value:
                  correction:
                  patches:
                    - op: 'remove'
                      path: 'names/0'
      responses:
        '200':
          description: Patient updated
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Patient.yaml'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
  /Patient/{nhs_number}/RelatedPerson:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: Returns people associated with or related to the Patient, e.g. family relations, contacts and guardians etc.
      summary: Return people related to the patient
      operationId: get-related-people
      tags:
        - related people
      parameters:
          # TODO - included as an example. More to go here
        - name: relationship_type
          description: Return
          in: query
          required: false
          schema:
            type: string
            #TODO enum: [...]
      responses:
        '200':
          description: A list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components/schemas/RelatedPerson.yaml'
    post:
      description: Create a new person related to/associated with the patient.
      summary: Add a related person to the patient's record
      operationId: add-related-person
      tags:
        - related people
      responses:
        '200':
          description: The new related person
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
          content:
            application/json:
              schema:
                $ref: 'components/schemas/RelatedPerson.yaml'
  /Patient/{nhs_number}/RelatedPerson/{id}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
      - name: id
        in: path
        required: true
        description: "The patient's NHS number"
        schema:
          type: string
    get:
      description: Returns a person associated with or related to the Patient, e.g. family relations, contacts and guardians etc.
      summary: Return a person related to the patient
      operationId: get-related-person
      tags:
        - related people
      parameters:
        - name: relationship_type
          description: Return
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components/schemas/RelatedPerson.yaml'
    put:
      description: Update a person associated with or related to the Patient.
      summary: Update related
      operationId: update-related-person
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      tags:
        - related people
      responses:
        '200':
          description: The updated related person
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components/schemas/RelatedPerson.yaml'
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
    delete:
      description: Delete a person related to/associated with the patient.
      summary: Remove a related person
      operationId: delete-related-person
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      tags:
        - related people
      responses:
        '200':
          description: Successfully removed related person
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
  /Patient/{nhs_number}/ReasonableAdjustment:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: List any reasonable adjustments which have been registered for a patient.
      summary: Retrieve a patient's reasonable adjustments
      operationId: get-reasonable-adjustments
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A list
    post:
      summary: Add a new reasonable adjustments
      operationId: add-reasonable-adjustment
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A reasonable adjustment
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
  /Patient/{nhs_number}/ReasonableAdjustment/{adjustment_id}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
      - in: path
        name: adjustment_id
        schema:
          type: string
        description: ID of a reasonable adjustment
        example: '12345'
        required: true
    get:
      description: Show a specific reasonable adjustment that has been registered for a patient.
      summary: Retrieve a specific reasonable adjustment
      operationId: get-reasonable-adjustment
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A reasonable adjustment
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
    put:
      description: Update a specific reasonable adjustment for a patient.
      summary: Update a specific reasonable adjustment
      operationId: update-reasonable-adjustment
      tags:
        - reasonable adjustments
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      responses:
        '200':
          description: A reasonable adjustment
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
    delete:
      description: Delete a specific reasonable adjustment for a patient.
      summary: Delete a specific reasonable adjustment
      operationId: delete-reasonable-adjustment
      tags:
        - reasonable adjustments
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      responses:
        '200':
          description: A reasonable adjustment
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
  /Patient/{nhs_number}/Address:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: List address information belonging to a patient.
      summary: List a patient's addresses
      operationId: get-addresses
      tags:
        - addresses
      responses:
        '200':
          description: Successful request
    post:
      description: Create a new address for a patient.
      summary: Add a new address to the patient
      operationId: add-address
      tags:
        - addresses
      responses:
        '200':
          description: Successful request
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
  /Patient/{nhs_number}/Address/{address_id}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
      - in: path
        name: address_id
        schema:
          type: string
        description: ID of patient's address
        example: '12345'
        required: true
    get:
      description: Show information on a specific address of a patient.
      summary: Show a specific address
      operationId: get-address
      tags:
        - addresses
      responses:
        '200':
          description: Successful request
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
    put:
      description: Update address information for a patient.
      summary: Update a patient's address
      operationId: update-address
      tags:
        - addresses
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      responses:
        '200':
          description: Successful request
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
    delete:
      description: Delete an address belonging to a patient.
      summary: Remove an address from a patient
      operationId: delete-address
      tags:
        - addresses
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      responses:
        '200':
          description: Successful request
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
components:
  parameters:
    NhsNumber:
      name: nhs_number
      in: path
      description: The patient's NHS Number.
      required: true
      schema:
        $ref: 'components/schemas/NhsNumber.yaml'
    IfMatch:
      in: header
      name: If-Match
      description: |
        Latest known version identifier enclosed in quotes.

        Send the value of this resource's `ETag` response header (or `_version` property) as received.
      required: true
      schema:
        type: string
        format: '^\"[[:print:]]+\"$' # Printable characters enclosed in quotes. See: https://tools.ietf.org/html/rfc7230#section-3.2.6
        example: '"2"'
  schemas:
    Patient:
      $ref: 'components/schemas/Patient.yaml'
  responses:
    412PreconditionFailed:
      description: |
        Precondition failed

        The version identifier submitted in the `If-Match` header was not the latest version of the resource.
      content:
        application/json:
          schema:
            $ref: 'components/schemas/Error.yaml'
          example:
            code: version_mismatch
            message: 'This resource has changed since you last read. Please re-read and try again with the new version number.'
    400MissingIfMatchHeader:
      description: |
        Client Error

        Missing `If-Match` header.
      content:
        application/json:
          schema:
            $ref: 'components/schemas/Error.yaml'
          example:
            code: version_not_supplied
            message: 'IfMatch header must be supplied to update this resource'
