openapi: "3.0.0"
info:
  version: 0.1.0
  title: Patient Information API
  description: A RESTful API for finding patients and accessing patients' personal details held nationally by NHS Digital. This API is the authoritative source for this information for the NHS in England.

paths:
  /Patient:
    get:
      summary: Search for patients
      description: |
        Find patients matching the given parameters using a case-insensitive search. Four types of searches are supported:
        # Search types
        This endpoint will search for a patient using one of four search types. The choice of search is automatic and will cascade as necessary until results are found.
        
        ## Simple
        The fastest match, requires family_name, first_name, gender, birth_date
        Returns either a single matching patient or nothing. A limited set of parameters can be provided, all of which must exactly match the current information held.
        
        ## Advanced
        Can return multiple matching patients if the information provided matches the current information held. Supports searching against additional information fields. Wildcards (\*) in name and postcode fields are supported. Wildcards must be preceeded by at least two characters, i.e. 'Br\*' is valid, but '\*cDougal' is not
        
        ## Advanced Historic
        Identical to advanced except it also searches historic data.
        
        ## Weighted
        Returns a percentage match weight for each potentially matching patient. Always searches historical data. Requires at least one of the following combinations of search parameters:
        
          - family_name, first_name, gender, birth_date (or range)
          - family_name, gender, birth_date (or range), postcode
          - first_name, gender, birth_date (or range), postcode
      tags:
        - patients
      parameters:
        - name: family_name
          description: The patient's family name (surname)
          example: Smith
          in: query
          required: true
          schema:
            type: string
        - name: first_name
          description: the patient's first given name
          example: Jane
          in: query
          required: false
          schema:
            type: string
        - name: other_names
          description: Any other given name(s). Ignored if provided in simple searches.
          example: Jenny
          in: query
          required: false
          schema:
            type: string
        - name: gender
          example: female
          in: query
          required: true
          schema:
            $ref: 'components/schemas/GenderSearchType.yaml'
        - name: birth_date
          in: query
          description: Birth date in the format yyyy-mm-dd. Required for simple searches. Other search types must provide either a birth date or a birth date range
          example: "2018-03-20"
          required: false
          schema:
            type: string
            format: date
        - name: birth_date_range_start
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
        - name: birth_date_range_end
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date            
        - name: death_date
          in: query
          description: Date of death in the format yyyy-mm-dd
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
            example: 2018-03-20
        - name: death_date_range_start
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
            example: 2018-03-25
        - name: death_date_range_end
          in: query
          description: Date in the format yyyy-mm-dd. Ranges can be used instead of searching a specific date. Do not use in simple searches
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
        - name: postcode
          description: White spaces in postcodes are significant, i.e. LS16AE will not match LS1 6AE
          example: LS1 6AE
          in: query
          required: false
          schema:
            type: string
        - name: practice_ods
          description: The ODS code of the patient's registered general practice. Do not use in simple searches
          example: Y00001
          in: query
          required: false
          schema:
            type: string
        - name: gp_ods
          description: The ODS code of the patient's registered general practitioner (GP). Do not use in simple searches
          example: G1234567
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: An array of matched patients. Empty if none found. Returns percentage match weight for each returned patient for weighted searches
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: 'components/schemas/Patient.yaml'
                    - type: object
                      required:
                        - match_weight
                        - patient
                      properties:
                        match_weight:
                          type: integer
                          example: 78
                        patient:
                          $ref: 'components/schemas/Patient.yaml'
    post:
      deprecated: true
      description: Used to create an NHS Number for a new patient. Should only be used if the patient cannot be found using any of the search options.
      summary: Create a new patient
      tags:
        - patients
      requestBody:
        required: true
        content:
          application/json:  
            schema:
              $ref: 'components/schemas/PatientNew.yaml'
      responses:
        '200':
          description: NHS Number allocated
          content:
            application/json:  
              schema:
                $ref: 'components/schemas/Patient.yaml'
        '409':
          description: Matching patient already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient:
                    description: The path to the matched patient
                    type: string
                    format: path
                    example: /Patient/4505577104
  /Patient/{nhs_number}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: Returns current information for the patient with the given NHS Number
      summary: Retrieve a patient's record
      tags:
        - patients
      responses:
        '200':
          description: Information successfully returned
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Patient.yaml'
        '404':
          description: Patient not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Error.yaml'
    patch:
      description: Updates specific patient information. Updates are specified using JSON Merge Patch. Update or insert general practice registration using the GeneralPracticeWrite model.
      summary: Update a patient's record
      tags:
        - patients
      externalDocs:
        description: IETF RFC 7396
        url: https://tools.ietf.org/html/rfc7396
      requestBody:
        required: true
        content:
          application/json:  
            schema:
              type: object
              required:
                - patient
              properties:
                correction:
                  description: Set to true if the update is correcting previously incorrect data
                  type: boolean
                  default: false
                patient:
                  $ref: 'components/schemas/Patient.yaml'
          # TODO examples, especially of an add name etc.
      responses:
        '200':
          description: Patient updated
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Patient.yaml'
  /Patient/{nhs_number}/RelatedPerson:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: Returns people associated with or related to the Patient, e.g. family relations, contacts and guardians etc.
      summary: Return people related to the patient
      tags:
        - related people
      parameters:
          # TODO - included as an example. More to go here
        - name: relationship_type
          description: Return related people with the given relationship type
          in: query
          required: false
          schema:
            type: string
            #TODO enum: [...]
      responses:
        200:
          description: A list of related people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components/schemas/RelatedPerson.yaml'
    post:
      description: Create a new person related to/associated with the patient
      summary: Add a related person to the patient's record
      tags:
        - related people
      responses:
        200: 
          description: The new related person
          content:
            application/json:
              schema:
                $ref: 'components/schemas/RelatedPerson.yaml'
  /Patient/{nhs_number}/RelatedPerson/{id}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      description: Returns a person associated with or related to the Patient, e.g. family relations, contacts and guardians etc.
      summary: Return a person related to the patient
      tags:
        - related people
      parameters:
        - name: relationship_type
          description: Return related people with the given relationship type
          in: query
          required: false
          schema:
            type: string
      responses:
        200: 
          description: A list of related people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components/schemas/RelatedPerson.yaml'
    put:
      description: Update the details of a related person
      summary: Update related person
      tags:
        - related people
      responses:
        200: 
          description: The updated related person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components/schemas/RelatedPerson.yaml'
    delete:
      description: Delete a person related to/associated with the patient
      summary: Remove a related person
      tags:
        - related people
      responses:
        200: 
          description: Successfully removed related person
  /Patient/{nhs_number}/ReasonableAdjustment:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: Returns any reasonable adjustments which have been registered for this patient
      summary: Retrieve a patient's reasonable adjustments
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A list of reasonable adjustments
    post:
      summary: Add a new reasonable adjustments
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A reasonable adjustment
  /Patient/{nhs_number}/ReasonableAdjustment/{adjustment_id}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
      - in: path
        name: adjustment_id
        schema:
          type: string
        description: ID of a reasonable adjustment
        example: '12345'
        required: true
    get:
      summary: Retrieve a specific reasonable adjustments
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A reasonable adjustment
    put:
      summary: Update a specific reasonable adjustments
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A reasonable adjustment
    delete:
      summary: Delete a specific reasonable adjustments
      tags:
        - reasonable adjustments
      responses:
        '200':
          description: A reasonable adjustment
  /Patient/{nhs_number}/Address:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      summary: List a patient's addresses
      tags:
        - addresses
      responses:
        200:
          description: Successful request
    post:
      summary: Add a new address to the patient
      tags:
        - addresses
      responses:
        200:
          description: Successful request
  /Patient/{nhs_number}/Address/{address_id}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
      - in: path
        name: address_id
        schema:
          type: string
        description: ID of patient's address
        example: '12345'
        required: true
    get:
      summary: Show a specific address
      tags:
        - addresses
      responses:
        200:
          description: Successful request
    put:
      summary: Update a patient's address
      tags:
        - addresses
      responses:
        200:
          description: Successful request
    delete:
      summary: Remove an address from a patient
      tags:
        - addresses
      responses:
        200:
          description: Successful request
components:
  parameters:
    NhsNumber:
      name: nhs_number
      in: path
      description: The patient's NHS Number
      required: true
      schema:
        $ref: 'components/schemas/NhsNumber.yaml'
  schemas:
    Patient:
      $ref: 'components/schemas/Patient.yaml'
