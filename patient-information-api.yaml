openapi: "3.0.0"
info:
  version: 0.1.0
  title: Personal Demographics Service API
  description: |
    ## Overview
    Use this API to access the [Personal Demographics Service (PDS)](https://digital.nhs.uk/services/demographics) - the national electronic database of NHS patient details such as name, address, date of birth and NHS Number.

    You can:
    * search for patients
    * get patients' personal details
    * update patients' personal details

    You cannot currently use this API to:
    * register births (not required for GPs)
    * register new patients (GPs should do this via [NHAIS](https://digital.nhs.uk/services/nhais/nhais-developer-document-library))

    You can currently access the following data:
    * NHS Number
    * name
    * gender
    * birth
    * addresses
    * contact details
    * registered GP
    * preferred pharmacy
    * consent information
    * related people

    ## API status
    This API is in [Alpha](/reference-guide#api-status) - expect significant breaking changes.
    
    It is currently only available for sandbox testing, not for integration testing or production use.
    
    The following items are on our roadmap, in rough priority order:
    - addition of data fields that are dependent on upcoming UK Core FHIR profiles.
    - complete sandbox service (currently only GET /Patient/{nhs_number}
    - move from Alpha to Beta
    - authorisation using OAuth 2.0 and NHS Identity
    - integration test service
    - assurance process
    - production service (Beta)
    - exit Beta (once we are sure the service is fit for purpose)

    We are extremely keen to receive feedback on the API,
    for example if there are data fields missing that you think you need.
    Please [get in touch](/help-and-support) with any comments or suggestions.
    
    ## Technology
    This API is [RESTful](https://emea-demo8-nhsdportal.apigee.io/introduction-to-apis#basic-rest).

    This API is compliant with the
    [FHIR](https://emea-demo8-nhsdportal.apigee.io/introduction-to-apis#fhir-rest)
    standard for health care data exchange.
    Specifically, it complies with [FHIR R4](https://hl7.org/fhir/R4/).

    ## Authorisation
    This API is [user-restricted](https://emea-demo8-nhsdportal.apigee.io/security-and-authorisation#user-restricted-apis).
    It uses OAuth 2.0 to authorise both the calling system and end user. More details to follow.

    ## Testing
    You can test this API in:
    * our [sandbox environment](/testing#sandbox-testing)
    * our [integration test environment](/testing#integration-testing) (coming soon)

    For sandbox test scenarios and test data, refer to the documentation for individual endpoints.

    ## Assurance
    Details to follow.

    ## Endpoints
    To see details for specific endpoints, select from the list on the left hand side of the page:
    * /Patient GET: search for patient
    * /Patient/{nhs_number} GET: get patient's personal details
    * /Patient/{nhs_number> PATCH: update patient's personal details
    * details for other endpoints to follow
  contact:
    name: 'Patient Information API Support'
    url: 'https://tbc.api.nhs.net'
    email: 'tbc-api-support@nhs.net'

servers:
  - url: https://emea-demo8-test.apigee.net/v1
    description: Sandbox service

tags:
  - name: patients

paths:
  /Patient:
    get:
      summary: Search for patient
      operationId: search-patient
      externalDocs:
        description: ODS codes and documentation
        url: https://digital.nhs.uk/services/organisation-data-service
      description: |
        ## Search types
        This endpoint will search for a patient using one of four search types. The choice of search is automatic and will cascade as necessary until results are found.

        ### Simple
        The fastest match, requires family_name, first_name, gender, birth_date.
        Returns either a single matching patient or nothing. A limited set of parameters can be provided, all of which must exactly match the current information held.

        ### Advanced
        Can return multiple matching patients if the information provided matches the current information held. Supports searching against additional information fields. Wildcards (\*) in name and postcode fields are supported. Wildcards must be preceeded by at least two characters, i.e. 'Br\*' is valid, but '\*cDougal' is not.

        ### Advanced historic
        Identical to advanced except it also searches historic patient data, for example previous names or addresses.

        ### Weighted
        Returns a percentage match weight for each potentially matching patient. Always searches historical data. Requires at least one of the following combinations of search parameters:
          - family_name, first_name, gender, birth_date (or range)
          - family_name, gender, birth_date (or range), postcode
          - first_name, gender, birth_date (or range), postcode
      tags:
        - patients
      parameters:
        - name: family
          description: The patient's family name (surname)
          example: Smith
          in: query
          required: false
          schema:
            type: string
        - name: given
          description: The patient's given name(s)
          example: Jane
          in: query
          required: false
          schema:
            type: string
        - name: gender
          description: Gender with which the patient most strongly identifies.
          example: female
          in: query
          required: false
          schema:
            $ref: 'components/schemas/Gender.yaml'
        - name: birthdate
          in: query
          description: Birth date in the format yyyy-mm-dd. Required for simple searches. Other search types must provide either a birth date or a birth date range
          example: "2018-03-20"
          required: false
          schema:
            type: string
            format: date
        - name: death-date
          in: query
          description: Date of death in the format yyyy-mm-dd
          required: false
          example: "2018-03-20"
          schema:
            type: string
            format: date
            example: 2018-03-20
        - name: address-postcode
          description: White spaces in postcodes are significant, i.e. LS16AE will not match LS1 6AE
          example: LS1 6AE
          in: query
          required: false
          schema:
            type: string
        - name: organisation
          description: The ODS code of the patient's registered general practice. Do not use in simple searches
          example: Y00001
          in: query
          required: false
          schema:
            type: string
            format: ods_code
            pattern: '^[A-Z]\d{5}$'
        - name: general-practitioner
          description: The ODS code of the patient's registered general practioner. Do not use in simple searches
          example: Y00001
          in: query
          required: false
          schema:
            type: string
            format: ods_code
            pattern: '^[A-Z]\d{5}$'
      responses:
        '200':
          description: An array of matched patients. Empty if none found. Returns percentage match weight for each returned patient for weighted searches.
          content:
            application/json:
              schema:
                type: object
                properties:
                  resourceType:
                    type: string
                    description: FHIR Resource Type
                    default: Bundle
                  type:
                    type: string
                    description: FHIR Bundle Type
                    default: searchset
                  timestamp:
                    type: integer
                    description: Time the search was performed
                    example: 1575908416
                  total:
                    type: integer
                    description: Number of resources returned in search
                    example: 1
                  entry:
                    type: array
                    description: Patient search results
                    items:
                      type: object
                      properties:
                        search:
                          type: object
                          properties:
                            score:
                              description: Search score from 0.0 to 1.0
                              type: number
                              minimum: 0.0
                              maximum: 1.1
                              example: 1.0
                        resource:
                          $ref: 'components/schemas/Patient.yaml'
              example:
                resourceType: Bundle
                type: searchset
                timestamp: 1575908416
                total: 1
                entry:
                  - search:
                      score: 1.0
                    resource:
                      $ref: 'components/examples/Patient.json'
        '400':
          description: Invalid search params supplied.
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Error.yaml'
              examples:
                not-enough:
                  summary: Too few search params
                  value:
                    code: invalid_search_params
                    message: 'Not enough search parameters were provided to be able to make a search'
                bad-dob:
                  summary: Bad date of birth format
                  value:
                    code: invalid_search_params
                    message: 'Date of birth has invalid format: 01-01-1900 is not in YYYY-MM-DD format'

  /Patient/{nhs_number}:
    parameters:
      - $ref: '#/components/parameters/NhsNumber'
    get:
      description: |
        ## Overview
        Returns personal details for the patient with the given NHS Number.

        ## Sandbox test scenarios
        You can test the following scenarios in our sandbox environment:
        <table><tr><th>Scenario</th><th>Request</th><th>Response</th></tr><tr><td>Patient exists</td><td>nhs_number=9000000009</td><td>HTTP Status 200 with patient data in the response body</td></tr><tr><td>Patient doesn't exist</td><td>nhs_number=&lt;any other valid NHS Number&gt;</td><td>HTTP Status 404 with error details in the response body</td></tr><tr><td>Invalid NHS Number</td><td>nhs_number=&lt;any invalid NHS Number&gt;</td><td>HTTP Status 400 with error details in the response body</td></tr></table>

        You can try this out using the "Try this API" feature on the right hand side of this page.

      summary: Retrieve a patient's record
      operationId: get-patient
      tags:
        - patients
      responses:
        '200':
          description: Information successfully returned
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Patient.yaml'
              example:
                $ref: 'components/examples/Patient.json'
        '400':
          description: Invalid NHS number supplied
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Error.yaml'
              example:
                code: 'invalid_nhs_number'
                message: 'NHS number is not in the correct format, or is not a real NHS number'
        '404':
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Error.yaml'
              example:
                code: 'not_found'
                message: 'Patient with NHS number 1234567890 could not be found'
    patch:
      description: Updates specific patient information. Updates are specified JSON Patch.
      summary: Update a patient's record
      operationId: update-patient-partial
      tags:
        - patients
      externalDocs:
        description: IETF RFC
        url: https://tools.ietf.org/html/rfc6902
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              type: object
              required:
                - patches
              properties:
                correction:
                  description: Set to true if the update is correcting previously incorrect data
                  type: boolean
                  default: false
                patches:
                  $ref: 'components/schemas/JsonPatch.yaml'
            examples:
              add-name:
                summary: Add a new name to the patient
                value:
                  patches:
                    - op: 'add'
                      path: 'name/-'
                      value:
                        use: usual
                        period:
                          start: 2019-12-31
                        text: Dr Joe H. M. Bloggs PhD
                        prefix: Dr
                        given: [Joe, Horation, Maximus]
                        family: Bloggs
                        suffix: PhD
              update-name:
                summary: Update the second given name entry
                value:
                  correction:
                  patches:
                    - op: 'replace'
                      path: 'name/1/given'
                      value: 'Jonathan'
              delete-name:
                summary: Remove a name no longer in use
                value:
                  correction:
                  patches:
                    - op: 'remove'
                      path: 'name/0'
      responses:
        '200':
          description: Patient updated
          headers:
            ETag:
              $ref: 'components/schemas/ETag.yaml'
          content:
            application/json:
              schema:
                $ref: 'components/schemas/Patient.yaml'
        '400':
          $ref: '#/components/responses/400MissingIfMatchHeader'
        '412':
          $ref: '#/components/responses/412PreconditionFailed'
components:
  parameters:
    NhsNumber:
      name: nhs_number
      in: path
      description: The patient's NHS Number.
      required: true
      schema:
        $ref: 'components/schemas/NhsNumber.yaml'
    IfMatch:
      in: header
      name: If-Match
      description: |
        Latest known version identifier enclosed in quotes.

        Send the value of this resource's `ETag` response header (or `_version` property) as received.
      required: true
      schema:
        type: string
        format: '^\"[[:print:]]+\"$' # Printable characters enclosed in quotes. See: https://tools.ietf.org/html/rfc7230#section-3.2.6
        example: '"2"'
  schemas:
    Patient:
      $ref: 'components/schemas/Patient.yaml'
  responses:
    412PreconditionFailed:
      description: |
        Precondition failed

        The version identifier submitted in the `If-Match` header was not the latest version of the resource.
      content:
        application/json:
          schema:
            $ref: 'components/schemas/Error.yaml'
          example:
            code: version_mismatch
            message: 'This resource has changed since you last read. Please re-read and try again with the new version number.'
    400MissingIfMatchHeader:
      description: |
        Client Error

        Missing `If-Match` header.
      content:
        application/json:
          schema:
            $ref: 'components/schemas/Error.yaml'
          example:
            code: version_not_supplied
            message: 'IfMatch header must be supplied to update this resource'
