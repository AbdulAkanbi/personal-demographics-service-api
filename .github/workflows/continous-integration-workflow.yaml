name: Build Jobs

on: push

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function

      - name: Install Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      # WARNING: if you add a new apt package you MUST update this cache step or it will not be installed!
      # TODO: make sure this can save properly
      - name: Cache Java and NPM installs
        uses: actions/cache@v1
        env:
          cache-name: cache-apt-packages
          jre-jdk-version: 2:1.11-68ubuntu1~18.04.1
          npm-version: 3.5.2-0ubuntu4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.jre-jdk-version }}-${{ env.npm-version }}

      # TODO: skip on cache hit?
      - name: Update apt repositories
        run: sudo apt update

      # TODO: skip on cache hit
      - name: Install Java and Node
        run: sudo apt install default-jre default-jdk npm

      - name: Upgrade python packaging tools
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install poetry
        run: pip install poetry

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache poetry packages
        uses: actions/cache@v1
        env:
          cache-name: cache-poetry-packages
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      # TODO: do we want to split this out and skip in case of cache hits?
      - name: Install repo
        run: make install

      - name: Check licenses
        run: make check-licenses

      - name: Lint Spec
        run: make test

      - name: Check resources are valid FHIR 4.0.1
        run: make validate

      - name: Compile spec
        run: make publish

      - name: Set SPEC_VERSION env var
        run: echo ::set-env name=SPEC_VERSION::$(poetry run python scripts/calculate_version.py)

      - name: Store distributable schema
        uses: actions/upload-artifact@v1
        with:
          name: patient-demographics-service-api-${{ env.SPEC_VERSION }}+${{ github.run_id }}.json
          path: ./dist/patient-demographics-service-api.json

      - name: Deploy to Apigee (master only)
        if: github.ref == 'refs/heads/master'
        env:
          APIGEE_USER: ${{ secrets.APIGEE_USER }}
          APIGEE_PASS: ${{ secrets.APIGEE_PASS }}
          APIGEE_PORTAL_API_ID: ${{ secrets.APIGEE_PORTAL_API_ID }}
          APIGEE_SPEC_ID: ${{ secrets.APIGEE_SPEC_ID }}
        run: scripts/deploy.sh
