trigger:
- master


jobs:
  - job: build
    displayName: Build & Test
    timeoutInMinutes: 10
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      API_TEST_ENV_FILE_PATH: "tests/e2e/environments/local.postman_environment.json"
    steps:
      # Check out repo with full depth
      - checkout: self

      # Use Python 3.8
      - task: UsePythonVersion@0
        displayName: "Use Python 3.8"
        inputs:
          versionSpec: "3.8"

      # Install apt dependencies
      - bash: "sudo apt update && sudo apt-get install --yes default-jre default-jdk npm"
        displayName: Install apt dependencies

      # Install python dependencies
      - bash: "python -m pip install --upgrade pip setuptools wheel && pip install poetry"
        displayName: Install python dependencies

      # cache python dependencies
      - task: Cache@2
        displayName: "Cache Python Dependencies"
        inputs:
          key: '"$(Agent.OS)" | poetry.lock'
          path: "~/.cache/pypoetry"

      # cache npm dependencies
      - task: Cache@2
        displayName: "Cache Package NPM Dependencies"
        inputs:
          key: '"$(Agent.OS)" | "package" | package-lock.json'
          path: "node_modules"
          
      # cache sandbox npm dependencies
      - task: Cache@2
        displayName: "Cache Sandbox NPM Dependencies"
        inputs:
          key: '"$(Agent.OS)" | "sandbox" | sandbox/package-lock.json'
          path: "sandbox/node_modules"

      # make install
      - bash: "make install"
        displayName: Install repo

      # start sandbox for testing later
      - bash: "make sandbox &"
        displayName: Start Sandbox Server

      # check licenses
      - bash: "make check-licenses"
        displayName: Check licenses

      # lint
      - bash: "make lint"
        displayName: Lint

      # validate
      - bash: "make validate"
        displayName: Validate FHIR

      # compile spec
      - bash: "make publish"
        displayName: Compile Spec

      # set SPEC_VERSION
      - bash: 'echo "##vso[task.setvariable variable=SPEC_VERSION]$(poetry run python scripts/calculate_version.py)"'
        displayName: Set SPEC_VERSION

      # run local tests
      - bash: "make test"
        displayName: Run Tests
