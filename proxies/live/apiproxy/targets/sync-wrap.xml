<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TargetEndpoint name="sync-wrap">
  <FaultRules>
    <FaultRule name="access_token_expired">
      <Step>
        <Name>ExtractVariables.OAuthErrorFaultString</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Errors.OAuthPolicyResponse</Name>
      </Step>
      <Condition>oauthV2.OauthV2.VerifyAccessToken.failed</Condition>
    </FaultRule>
    <!-- Check for request time outs and add a friendly error message -->
    <!-- <FaultRule name="request_time_out">
      <Condition>response.status.code == 504 AND response.headers.X-Apigee.proxy.basepath == "sync-wrap"</Condition>
      <Step>
        <Name>AssignMessage.Errors.RequestTimeout</Name>
      </Step>
    </FaultRule> -->
  </FaultRules>
  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.Errors.CatchAllMessage</Name>
    </Step>
  </DefaultFaultRule>
  <PreFlow>
    <Request>
      <Step>
        <Name>OauthV2.VerifyAccessToken</Name>
      </Step>
      <Step>
        <Name>Quota</Name>
      </Step>
      <Step>
        <Name>SpikeArrest</Name>
      </Step>
      <Step>
        <Name>AssignMessage.AddSyncWaitHeader</Name>
        <Condition>(request.header.X-Sync-Wait.1 LesserThan 0.25) OR (request.header.X-Sync-Wait.1 GreaterThan 29) OR (request.header.X-Sync-Wait.1 Is null)</Condition>
      </Step>
    </Request>
  </PreFlow>
  <Flows>
    <Flow name="request_timeout">
      <Request/>
      <Response>
        <Step>
          <!-- This get's added for sync-wrap errors only -->
          <Name>RaiseFault.RequestTimeout</Name>
          <Condition>response.status.code == "504" AND response.headers.X-Apigee.proxy.basepath == "sync-wrap"</Condition>
        </Step>
      </Response>
    </Flow>
  </Flows>
  <LocalTargetConnection>
    <APIProxy>sync-wrap-{{ APIGEE_ENVIRONMENT }}</APIProxy>
    <ProxyEndpoint>default</ProxyEndpoint>
    <Path>/sync-wrap/{{ SERVICE_BASE_PATH }}</Path>
  </LocalTargetConnection>
</TargetEndpoint>