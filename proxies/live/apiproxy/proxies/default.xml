<ProxyEndpoint name="default">
  <PreFlow>
    <Request>
      <Step>
          <Name>AssignMessage.Errors.Default</Name>
      </Step>
      <Step>
          <Name>AssignMessage.Copy.RequestHeaders</Name>
      </Step>
      <Step>
        <!-- Header NHSD-Session-URID must be present and not empty -->
        <Name>RaiseFault.400BadRequest</Name>
        <Condition>(request.header.NHSD-Session-URID is null) or (not request.header.NHSD-Session-URID ~~ ".+")</Condition>
      </Step>
      <Step>
        <!-- Header NHSD-Request-ID must be in the correct format (GUID) -->
        <Name>RaiseFault.400BadRequest</Name>
        <Condition>(original-request-details.header.X-Request-ID != null) and (not original-request-details.header.X-Request-ID ~~ "^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$")</Condition>
      </Step>
    </Request>
  </PreFlow>
  <PostFlow>
    <Response>
      <Step>
        <Name>AssignMessage.Revert.RequestHeaders</Name>
      </Step>
    </Response>
  </PostFlow>
  <Flows>
    <Flow name="OptionsPreFlight">
      <Request />
      <Response>
        <Step>
          <Name>AssignMessage.AddCors</Name>
        </Step>
      </Response>
      <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
    </Flow>
    <Flow name="AddPayloadToPing">
      <Description />
      <Request />
      <Response>
        <Step>
          <Name>AssignMessage.AddPayloadToPing</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
  </Flows>
  <PostClientFlow name="PostClientFlow">
    <Response>
      <Step>
        <Name>FlowCallout.LogToSplunk</Name>
      </Step>
    </Response>
  </PostClientFlow>
  <HTTPProxyConnection>
    <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <RouteRule name="NoRoute">
    <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
  </RouteRule>
  <RouteRule name="NoRoutePing">
    <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
  </RouteRule>
  <RouteRule name="ig3">
    <TargetEndpoint>ig3</TargetEndpoint>
  </RouteRule>
  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.Errors.CatchAllMessage</Name>
    </Step>
  </DefaultFaultRule>
</ProxyEndpoint>
